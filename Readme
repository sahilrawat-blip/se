1. All the programs first check permission of the file and execute only when the user has appropriate permission to access the file.

2. fput program writes to the file(if file does not exist creates one with the appropriate permissions) and at the generate the
signature file for the same.
    fput filename

3. fget program first verifies the signature for the file and on signature verification only shows content of the file on terminal.
    fget filename

4.fput_encrypt program is used when the file needs to be encrypted. To do so this program first takes the hashed password of the owner of the file,
    from the shadow file and then feed this password to PKCS5_PBKDF2_HMAC_SHA1 function to generate key and iv of length 32 bytes and 17 bytes respectively
 These key and iv are used as key and iv for aes-256-ecb which encrypts all the contents of the file before writing to the file.And then generates the signature file
 for file.
    fput_encrypt filename

5. fget_decrypt program is used when the file need to read in the plaintext form. To do so this program first verifies the signature and then
    takes the hashed password of the owner of the file, from the shadow file and then feed this password to PKCS5_PBKDF2_HMAC_SHA1 function to generate key and iv o length 32 bytes
    and 17 bytes respectively. These key and iv are then used by aes-256-ecb to decrypt the content of the file and showing it on the terminal.
    fget_decrypt filename

6. fsign this program is used to generate the signature for a file. To do so first it extracts the hashed password of the owner of the file,from
    shadow file and use it to generate key of length 32 bytes and then uses this key in HMAC function which internally uses sha256 to generate the signature of 32bytes
    and save it in the filename.sign file.
    fsign filename

7. fverify program is used to verify the signature for a particular file. To do so first it do all the operations of the fsign program and then compares it
    with the signature already stored in the file, if the signature are not same program returns with exit status -1 else show the message "signature verified"
    fverify filename


Corner Cases:
1. all the programs will only work when the other user have appropriate permission to do the operation on the file.
2. fverify will only work when both the file and signature file has read permission for the user.
3. even though some other user have write permission on the file, the password that will be used to generate key and iv is the owners password.
4. even though the signature is being generated by some other user for a file but the owner of that signature will always be the same as the owner
    of the file.
5.